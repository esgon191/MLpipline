services:
  postgres:
    image: postgres:17.0
    restart: no
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: db0 
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d db0 -U user"]
      interval: 1s
      timeout: 5s
      retries: 10
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  minio:
    image: minio/minio:latest
    container_name: minio
    environment:
      - MINIO_ROOT_USER=user         # Установите имя пользователя (по умолчанию: 'minio')
      - MINIO_ROOT_PASSWORD=password  # Установите пароль (необходимо, чтобы длина была >= 8 символов)
    volumes:
      - minio_data:/data              # Сохраняйте данные в volume для устойчивости
    ports:
      - "9000:9000"                   # Порт для доступа к MinIO консоли
      - "9001:9001"                   # Порт для доступа к административной панели
    command: server /data --address ":9000" --console-address ":9001"
    
  zookeeper:
    image: bitnami/zookeeper:3.8.4
    container_name: zookeeper
    ports:
      - "2181"
    networks:
      - kafkanet
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    volumes:
      - zookeeper_data:/bitnami/zookeeper

  kafka-0:
    image: bitnami/kafka:3.9.0
    container_name: kafka-0
    expose:
      - 9092
    ports:
      - "29092:29092"
    networks:
      - kafkanet
    environment:
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_BROKER_ID=0
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=INTERNAL://:9092,EXTERNAL://:29092
      - KAFKA_CFG_ADVERTISED_LISTENERS=INTERNAL://kafka-0:9092,EXTERNAL://localhost:29092
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=INTERNAL
      # - KAFKA_MESSAGE_MAX_BYTES=60000000  # Настройка максимального размера сообщения 30 МБ
      # - KAFKA_MAX_REQUEST_SIZE=60000000   # Размер запроса, который брокер может принимать (30 МБ)
    volumes:
      - kafka_0_data:/bitnami/kafka
    depends_on:
      - zookeeper
    
  kafka-1:
    image: bitnami/kafka:3.9.0
    container_name: kafka-1
    expose:
      - 9092
    ports:
      - "29093:29093"
    networks:
      - kafkanet
    environment:
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_BROKER_ID=1
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=INTERNAL://:9092,EXTERNAL://:29093
      - KAFKA_CFG_ADVERTISED_LISTENERS=INTERNAL://kafka-1:9092,EXTERNAL://localhost:29093
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=INTERNAL
      # - KAFKA_MESSAGE_MAX_BYTES=60000000  # Настройка максимального размера сообщения 30 МБ
      # - KAFKA_MAX_REQUEST_SIZE=60000000   # Размер запроса, который брокер может принимать (30 МБ)
    volumes:
      - kafka_1_data:/bitnami/kafka
    depends_on:
      - zookeeper

  kafka-2:
    image: bitnami/kafka:3.9.0
    container_name: kafka-2
    expose:
      - 9092
    ports:
      - "29094:29094"
    networks:
      - kafkanet
    environment:
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_BROKER_ID=2
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=INTERNAL://:9092,EXTERNAL://:29094
      - KAFKA_CFG_ADVERTISED_LISTENERS=INTERNAL://kafka-2:9092,EXTERNAL://localhost:29094
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=INTERNAL
      # - KAFKA_MESSAGE_MAX_BYTES=60000000  # Настройка максимального размера сообщения 30 МБ
      # - KAFKA_MAX_REQUEST_SIZE=60000000   # Размер запроса, который брокер может принимать (30 МБ)
    volumes:
      - kafka_2_data:/bitnami/kafka
    depends_on:
      - zookeeper

  tensorflow-light-1:
    image: bitnami/tensorflow-serving:2.18.0
    ports:
      - 8500:8500  # Порт для gRPC сервера
      - 8501:8501  # Порт для REST API
    volumes:
      - ./models:/models  # Локальная папка с моделями монтируется в контейнер
    environment:
      - MODEL_NAME=lighttestmodel
    command: >
      tensorflow_model_server
      --model_config_file=/models/models.config   
      --rest_api_port=8501
      --grpc_port=8500
    #cpus: "2.0"         # Ограничение CPU до 2 виртуальных процессоров
    #mem_limit: "4g"     # Ограничение памяти до 4 ГБ

  tensorflow-light-2:
      image: bitnami/tensorflow-serving:2.18.0
      ports:
        - 8502:8502  # Порт для gRPC сервера
        - 8503:8503  # Порт для REST API
      volumes:
        - ./models:/models  # Локальная папка с моделями монтируется в контейнер
      environment:
        - MODEL_NAME=lighttestmodel
      command: >
        tensorflow_model_server
        --model_config_file=/models/models.config   
        --rest_api_port=8503
        --grpc_port=8502

networks:
  kafkanet:
    name: kafka-network

volumes:
  zookeeper_data:
    driver: local
    name: zookeeper_data
  kafka_0_data:
    driver: local
    name: kafka_0_data
  kafka_1_data:
    driver: local
    name: kafka_1_data
  kafka_2_data:
    driver: local
    name: kafka_2_data

  pgdata:

  minio_data:
    driver: local