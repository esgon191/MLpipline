services:
  postgres:
    image: postgres:17.0
    restart: no
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: db0 
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d db0 -U user"]
      interval: 1s
      timeout: 5s
      retries: 10
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  minio:
    image: minio/minio:latest
    container_name: minio
    environment:
      - MINIO_ROOT_USER=user         # Установите имя пользователя (по умолчанию: 'minio')
      - MINIO_ROOT_PASSWORD=password  # Установите пароль (необходимо, чтобы длина была >= 8 символов)
    volumes:
      - minio_data:/data              # Сохраняйте данные в volume для устойчивости
    ports:
      - "9000:9000"                   # Порт для доступа к MinIO консоли
      - "9001:9001"                   # Порт для доступа к административной панели
    command: server /data --address ":9000" --console-address ":9001"
    
  zookeeper:
    image: zookeeper:3.9.3
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=zookeeper:2888:3888
    networks:
      - kafka-net

  kafka1:
    image: apache/kafka:3.9.0
    container_name: kafka1
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_LOG_DIRS: /kafka/kafka-logs-1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - kafka-net

  kafka2:
    image: apache/kafka:3.9.0
    container_name: kafka2
    ports:
      - "9093:9093"
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_LOG_DIRS: /kafka/kafka-logs-2
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - kafka-net

  kafka3:
    image: apache/kafka:3.9.0
    container_name: kafka3
    ports:
      - "9094:9094"
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_LOG_DIRS: /kafka/kafka-logs-3
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - kafka-net

networks:
  kafka-net:
    driver: bridge

volumes:
  pgdata:

  minio_data:
    driver: local